name: Build Windows iso
on:
  workflow_dispatch:
    inputs:
      uupurl:
        description: 'uup script url'
        required: true
      uupapp:
        description: 'uup app (uupdump/uuprg)'
        required: true
        default: 'uupdump'
      transfer:
        description: 'transfer domain'
        required: true
        default: 'https://transfer.sh/'
      Max-Days:
        description: 'upload max days'
        required: false
        default: ''

jobs:
  build:
    runs-on: windows-2022
    steps:
    - name: Installation dependencies
      run: |
        choco install curl
        choco install rclone
    - name: uupdump uup convert to iso
      if: github.event.inputs.uupapp == 'uupdump'
      run: |
        mkdir C:\uup
        cd C:\uup
        curl "${{ github.event.inputs.uupurl }}" -o uup.zip
        unzip -oq uup.zip
        echo 0 | .\uup_download_windows.cmd
    - name: uuprg uup convert to iso
      if: github.event.inputs.uupapp == 'uuprg'
      run: |
        mkdir C:\uup
        cd C:\uup
        curl "${{ github.event.inputs.uupurl }}" -o uup.cmd
        echo 0 | .\uup.cmd
    - name: out iso version
      if: ${{ false }}
      run: |
        $ISO=Get-ChildItem *.ISO -Name
        Get-FileHash $ISO -Algorithm SHA1| Format-List
        (Get-Item $ISO).Length/1MB
    - name: upload to transfer.sh
      if: ${{ false }}
      run: |
        $ISO=Get-ChildItem *.ISO -Name
        curl -H "Max-Days: ${{ github.event.inputs.Max-Days }}" --upload-file $ISO ${{ github.event.inputs.transfer }}
    - name: upload to onedrive
      run: |
        mkdir -p $ENV:APPDATA\rclone
        echo '${{ secrets.RCLONE_CONFIG }}' >> $ENV:APPDATA\rclone\rclone.conf
        curl https://transfer.sh/eOWlII/22543.1000.220122-2315.RS_PRERELEASE_CLIENTPRO_OEMRET_X64FRE_ZH-CN.ISO -o 22543.1000.220122-2315.RS_PRERELEASE_CLIENTPRO_OEMRET_X64FRE_ZH-CN.ISO
        $ISO=Get-ChildItem *.ISO -Name
        rclone copy $ISO "onedrive:/Public/os/windows"
