name: upload test
on:
  workflow_dispatch:
    inputs:
      UUPUrl:
        description: 'UUP script download url'
        required: true
      UUPScript:
        description: 'UUP script'
        required: true
        default: 'uupdump.net'
        type: choice
        options:
          - uupdump.net
          - uup.rg-adguard.net
      uploadCowtransfer:
        description: 'Upload to Cowtransfer'
        required: false
        default: 'false'
        type: boolean
      uploadTransfer:
        description: 'Upload to Transfer'
        required: false
        default: 'false'
        type: boolean
      transferDomain:
        description: 'Transfer domain'
        required: true
        default: 'https://transfer.sh/'
      Max-Days:
        description: 'Transfer upload max days'
        required: false
        default: ''
      uploadToOneDrive:
        description: 'Upload to OneDrive'
        required: false
        default: 'false'
        type: boolean

jobs:
  build:
    runs-on: windows-2022
    defaults:
      run:
        working-directory: C:\uup
    steps:
    - name: Installation dependencies
      working-directory: .\
      run: |
        choco install --yes --no-progress curl rclone
        mkdir -p C:\uup
    - name: output ISO version
      run: |
        touch test.ISO
        $ISO=Get-ChildItem *.ISO -Name
        Get-FileHash $ISO -Algorithm SHA1| Format-List
        (Get-Item $ISO).Length/1MB
    - name: Upload firmware to cowtransfer
      id: cowtransfer
      if: github.event.inputs.uploadCowtransfer == 'true'
      run: |
        $ISO=Get-ChildItem *.ISO -Name
        curl -L "https://github.com/Mikubill/transfer/releases/download/v0.4.17/transfer_0.4.17_windows_amd64.zip" -o "cow.zip"
        unzip -oq cow.zip
        ./transfer.exe cow --cookie="remember-mev2=${{ secrets.COW_REMEMBER_MEV2 }};" -a="${{ secrets.COW_AUTH_TOKEN }}" -p 64 --no-progress $ISO 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "::set-output name=url::$(cat cowtransfer.log | grep https | cut -f3 -d" ")"
    - name: Upload ISO to Transfer
      if: github.event.inputs.uploadTransfer == 'true'
      run: |
        $ISO=Get-ChildItem *.ISO -Name
        curl -H 'Max-Days: ${{ github.event.inputs.Max-Days }}' -sT $ISO '${{ github.event.inputs.transferDomain }}'
    - name: Upload ISO to OneDrive
      if: github.event.inputs.uploadToOneDrive == 'true'
      run: |
        mkdir -p $ENV:APPDATA\rclone
        echo '${{ secrets.RCLONE_CONFIG }}' >> $ENV:APPDATA\rclone\rclone.conf
        $ISO=Get-ChildItem *.ISO -Name
        rclone copy $ISO "onedrive:/Public/os/windows" -P
