name: upload test
on:
  workflow_dispatch:
    inputs:
      uploadWenshushu:
        description: 'Upload to wenshushu'
        required: false
        default: 'true'
        type: boolean
#      uploadTransfer:
#        description: 'Upload to Transfer'
#        required: false
#        default: 'false'
#        type: boolean
#      transferDomain:
#        description: 'Transfer domain'
#        required: true
#        default: 'https://transfer.sh/'
#      Max-Days:
#        description: 'Transfer upload max days'
#        required: false
#        default: ''
#      uploadToOneDrive:
#        description: 'Upload to OneDrive'
#        required: false
#        default: 'false'
#        type: boolean

jobs:
  build:
    runs-on: windows-2022
    defaults:
      run:
        working-directory: C:\uup
    steps:
    - name: Installation dependencies
      working-directory: .\
      run: |
        choco install --yes --no-progress curl rclone
        mkdir -p C:\uup
    - name: output ISO version
      run: |
        fsutil file createnew test.ISO 4000000000
        $ISO=Get-ChildItem *.ISO -Name
        Get-FileHash $ISO -Algorithm SHA1| Format-List
        (Get-Item $ISO).Length/1MB
    - name: Upload firmware to wenshushu
      id: wenshushu
      if: github.event.inputs.uploadWenshushu == 'true'
      run: |
        $ISO=Get-ChildItem *.ISO -Name
        curl -L "https://github.com/Mikubill/transfer/releases/download/v0.4.17/transfer_0.4.17_windows_amd64.zip" -o "cow.zip"
        unzip -oq cow.zip
        ./transfer.exe wenshushu -p 64 --no-progress $ISO
#    - name: Upload ISO to Transfer
#      if: github.event.inputs.uploadTransfer == 'true'
#      run: |
#        $ISO=Get-ChildItem *.ISO -Name
#        curl -H 'Max-Days: ${{ github.event.inputs.Max-Days }}' -sT $ISO '${{ github.event.inputs.transferDomain }}'
#    - name: Upload ISO to OneDrive
#      if: github.event.inputs.uploadToOneDrive == 'true'
#      run: |
#        mkdir -p $ENV:APPDATA\rclone
#        echo '${{ secrets.RCLONE_CONFIG }}' >> $ENV:APPDATA\rclone\rclone.conf
#        $ISO=Get-ChildItem *.ISO -Name
#        rclone copy $ISO "onedrive:/Public/os/windows" -P
